<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:system="clr-namespace:System;assembly=mscorlib">

    <!-- Шрифт -->
    <FontFamily x:Key="BasicFont">Verdana</FontFamily>
    
    <!-- Стили для TextBlock -->
    <Style x:Key="BasicTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource BasicTextColor}" />
        <Setter Property="FontFamily" Value="{StaticResource BasicFont}" />
    </Style>

    <Style x:Key="ErrorTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource ErrorColor}" />
        <Setter Property="FontFamily" Value="{StaticResource BasicFont}" />
    </Style>

    <Style x:Key="HeadlineTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource BasicBlueColor}" />
        <Setter Property="FontFamily" Value="{StaticResource BasicFont}" />
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <Style x:Key="AdditionalTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource AdditionalTextColor}" />
        <Setter Property="FontFamily" Value="{StaticResource BasicFont}" />
    </Style>

    <Style x:Key="AdditionalTextBlockBoldStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource AdditionalTextColor}" />
        <Setter Property="FontFamily" Value="{StaticResource BasicFont}" />
        <Setter Property="FontWeight" Value="Bold"/>
    </Style>

    <!-- Стили для TextBox -->
    <Style x:Key="BasicTextBoxStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource BasicTextColor}" />
        <Setter Property="FontFamily" Value="{StaticResource BasicFont}" />
        <Setter Property="BorderBrush" Value="{Binding Mode=OneWay, Source={StaticResource AdditionalTextColor}}"/>
        <Setter Property="SelectionBrush" Value="{Binding Mode=OneWay, Source={StaticResource BasicBlueColor}}"/>
        <Setter Property="Background" Value="White"/>
    </Style>
    <Style x:Key="AdditionalTextBoxStyle" TargetType="TextBox">
        <Setter Property="Foreground" Value="{StaticResource AdditionalTextColor}" />
        <Setter Property="FontFamily" Value="{StaticResource BasicFont}" />
        <Setter Property="BorderBrush" Value="{Binding Mode=OneWay, Source={StaticResource AdditionalTextColor}}"/>
        <Setter Property="SelectionBrush" Value="{Binding Mode=OneWay, Source={StaticResource BasicBlueColor}}"/>
        <Setter Property="Background" Value="White"/>
    </Style>

    <!-- Стили для PasswordBox -->
    <Style x:Key="BasicPassowordStyle" TargetType="PasswordBox">
        <Setter Property="Foreground" Value="{StaticResource BasicTextColor}" />
        <Setter Property="FontFamily" Value="{StaticResource BasicFont}" />
        <Setter Property="BorderBrush" Value="{Binding Mode=OneWay, Source={StaticResource AdditionalTextColor}}"/>
        <Setter Property="SelectionBrush" Value="{Binding Mode=OneWay, Source={StaticResource BasicBlueColor}}"/>
        <Setter Property="Background" Value="White"/>
    </Style>

    <!-- Стили для Label -->
    <Style x:Key="BasicLabelStyle" TargetType="Label">
        <Setter Property="Foreground" Value="{StaticResource BasicTextColor}" />
        <Setter Property="FontFamily" Value="{StaticResource BasicFont}" />
    </Style>

    <!-- -->
    <Style x:Key="BasicCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource BasicTextColor}" />
        <Setter Property="FontFamily" Value="{DynamicResource BasicFont}" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource CheckBoxFocusVisual}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"
                                    Width="20"
                                    Height="20"
                                    CornerRadius="0"
                                    BorderThickness="1"
                                    BorderBrush="{DynamicResource AdditionalTextColor}">
                                <Border.Background>
                                    <SolidColorBrush Color="White" />
                                </Border.Background>
                                <Grid>
                                    <Path Visibility="Collapsed"
                                          Width="15"
                                          Height="15"
                                          x:Name="CheckMark"
                                          SnapsToDevicePixels="False"
                                          StrokeThickness="2"
                                          Data="M 7 15 L 1 6 M 7 15 L 14 1">
                                        <Path.Stroke>
                                            <SolidColorBrush Color="{DynamicResource BasicGrayTextColor}" />
                                        </Path.Stroke>
                                    </Path>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BasicBlueColor}"/>
                            <Setter TargetName="CheckMark" Property="Stroke" Value="{DynamicResource BasicBlueColor}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource BasicBlueInvertColor}"/>
                            <Setter TargetName="CheckMark" Property="Stroke" Value="{DynamicResource BasicBlueInvertColor}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль текста элементов меню -->
    <Style x:Key="TextMenuStyle"
           TargetType="TextBlock">

        <Setter Property="FontFamily"
                Value="{StaticResource BasicFont}" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="Foreground"
                Value="{StaticResource AdditionalTextColor}" />
        <Setter Property="FontSize"
                Value="20" />
        <Setter Property="Margin"
                Value="70,0,0,0" />
        <Setter Property="FontWeight"
                Value="Bold"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource BasicTextColor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль текста элементов меню -->
    <Style x:Key="TextMenuAdminStyle"
           TargetType="TextBlock">

        <Setter Property="FontFamily"
                Value="{StaticResource BasicFont}" />
        <Setter Property="VerticalAlignment"
                Value="Center" />
        <Setter Property="HorizontalAlignment"
                Value="Left" />
        <Setter Property="Foreground"
                Value="{StaticResource AdditionalTextColor}" />
        <Setter Property="FontSize"
                Value="12" />
        <Setter Property="Margin"
                Value="0,0,0,0" />
        <Setter Property="FontWeight"
                Value="Bold"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType={x:Type RadioButton}}}" Value="True">
                <Setter Property="Foreground" Value="{StaticResource BasicTextColor}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>